set nocompatible

" This is for Vundler
filetype off


"set the runtime path to include Vundle and initialize
set rtp+=~/dotfiles/vim/bundle/Vundle.vim
call vundle#begin()

" Let vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" Git wrapper for vim
Plugin 'tpope/vim-fugitive'

" Provide Git status in the gutter
Plugin 'airblade/vim-gitgutter'

" NerdTree is a file explore
Plugin 'scrooloose/nerdtree'

" Better JSON handling
Plugin 'elzr/vim-json'

" Surround plugin
Plugin 'tpope/vim-surround'
"
Plugin 'godlygeek/tabular'

" Markdown support
Plugin 'plasticboy/vim-markdown'

" Track the engine.
Plugin 'SirVer/ultisnips'

" Snippets are separated fom the engine. Add this if you want them:
Plugin 'honza/vim-snippets'

Plugin 'Valloric/YouCompleteMe'

Plugin 'fatih/vim-go'

call vundle#end() "required

" Trigger configuration. Do not use <tab> if you use YouCompleteMe
let g:UltiSnipsExpandTrigger="<c-t>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

" If you want :UltiSnipsEdit to split your window
"let g:UltiSnipsEditSplit="vertical"


filetype plugin indent on "required

set modelines=1

set directory=~/dotfiles/vim/tmp
set backupdir=~/dotfiles/vim/backup

set mouse=a

syntax on

set shiftwidth=4 
set autoindent 
set tabstop=3 
set smarttab 
set bg=dark
set hlsearch
set hidden
set number
"
set ruler
set hlsearch
set incsearch
"
set wrap
set visualbell
set title
"
set laststatus=2
set statusline=[%n]\ %<%.99f\ %h%w%m%r%y\ %{exists('*CapsLockStatusline')?CapsLockStatusline():''}%=%-16(\ %l,%c-%v\ %)%P

set list

" NerdTree settings
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
map <C-n> :NERDTreeToggle<CR>

"" Have a line that indicates 80 character mark.
set colorcolumn=81,161
let mapleader = ","
let maplocalleader = "\\"
""
"" quick movement between searches
:nnoremap <leader>gn :cnext<cr>
:nnoremap <leader>gp :cprevious<cr>
""
"
"" This will add the date at the current location 
"" the way I like dates to be look.
":nnoremap <leader>d <esc>:.!date +" \%Y \%B \%d, \%A"<cr>
"
"
"
"
" My Mappings.
" ============
" Enable Quick editing of VIMRC.
:nnoremap <leader>ev :vsplit $MYVIMRC<cr>
:nnoremap <leader>sv :source $MYVIMRC<cr>
:inoremap kj <esc>
"
" Go settings
au FileType go source ~/dotfiles/vim/sources.d/go.vim
"Ruby settings
au FileType ruby source ~/dotfiles/vim/sources.d/ruby.vim
"Perl settings
au FileType perl source ~/dotfiles/vim/sources.d/perl.vim

